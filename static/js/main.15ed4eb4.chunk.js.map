{"version":3,"sources":["api/api.js","components/Input/input.styles.js","components/Input/Input.js","components/CurrentWeather/current_weather.styles.js","utils/emoji.js","components/CurrentWeather/CurrentWeather.js","components/DayForecast/DayForecast.js","components/WeekForecast/WeekForecast.js","components/App/app.styles.js","components/App/App.js","index.js"],"names":["fetchWeatherByLocation","latitude","longitude","axios","get","process","makeStyles","theme","search","maxWidth","margin","Input","setLocation","setWeather","useState","input","setInput","styles","useStyles","value","onChange","onSelect","location","upperCaseInput","toLowerCase","split","map","word","charAt","toUpperCase","substring","join","sessionStorage","getItem","JSON","parse","then","res","city","data","results","address_components","long_name","geometry","lat","lng","weather","setItem","stringify","catch","alert","getInputProps","suggestions","getSuggestionItemProps","loading","className","TextField","fullWidth","placeholder","suggestion","active","style","backgroundColor","cursor","description","general","breakpoints","up","paddingRight","spacing","marginBottom","temp","down","textAlign","details","paddingLeft","paddingBottom","marginTop","emoji","CurrentWeather","currentWeather","undefined","Grid","container","item","xs","sm","Typography","align","variant","component","icon","main","Math","round","feels_like","humidity","pressure","DayForecast","dayWeather","day","Date","dt","toLocaleDateString","weekday","night","WeekForecast","forecast","paper","minHeight","padding","App","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","fetchLocation","cityName","CssBaseline","Container","Paper","elevation","current","daily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15ed4eb4.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchLocation = (latitude, longitude) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&language=en&result_type=locality&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => res.data.results[0].address_components[0].long_name);\r\n  \r\nconst fetchCoordinates = (location) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&language=en&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => ({city: res.data.results[0].address_components[0].long_name, location: {...res.data.results[0].geometry.location}}));\r\n\r\nconst fetchWeatherByLocation = (latitude, longitude) => axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=minutely,hourly,alerts&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n\r\nexport { fetchLocation, fetchCoordinates, fetchWeatherByLocation };","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  search: {\r\n    maxWidth: '360px',\r\n    margin: '0 auto',\r\n  },\r\n}));","import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nimport { fetchCoordinates, fetchWeatherByLocation } from '../../api/api';\r\nimport useStyles from './input.styles';\r\n\r\nconst Input = ({ setLocation, setWeather }) => {\r\n  const [input, setInput] = useState('');\r\n  const styles = useStyles();\r\n\r\n  const handleChange = (input) => {\r\n    setInput(input);\r\n  }\r\n\r\n  const handleSelect = (input) => {\r\n    let upperCaseInput = input\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map((word) => word.charAt(0).toUpperCase() + word.substring(1))\r\n      .join(' ');\r\n\r\n    if (!sessionStorage.getItem(upperCaseInput)) {\r\n      fetchCoordinates(input)\r\n        .then(({ city, location }) => {\r\n\r\n          if(!sessionStorage.getItem(city)) {\r\n            fetchWeatherByLocation(location.lat, location.lng)\r\n              .then(weather => {\r\n                setWeather(weather.data);\r\n                sessionStorage.setItem(city, JSON.stringify(weather.data));\r\n              })\r\n              .then(() => setLocation(city))\r\n              .catch(() => alert(`Can't fetch weather data`));\r\n          } else {\r\n            setLocation(city)\r\n            setWeather(JSON.parse(sessionStorage.getItem(city)));\r\n          }\r\n\r\n        })\r\n        .catch(() => alert('Invalid input'));\r\n        \r\n    } else {\r\n      setLocation(upperCaseInput);\r\n      setWeather(JSON.parse(sessionStorage.getItem(upperCaseInput)));\r\n    }\r\n\r\n    setInput('');\r\n  }\r\n\r\n  return (\r\n    <PlacesAutocomplete\r\n      value={input}\r\n      onChange={handleChange}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div className={styles.search}>\r\n          <TextField fullWidth\r\n            {...getInputProps({\r\n              placeholder: 'Search',\r\n              className: 'location-search-input',\r\n            })}\r\n          />\r\n          <div className=\"autocomplete-dropdown-container\">\r\n            {loading && <div>Loading...</div>}\r\n            {suggestions.map(suggestion => {\r\n              const className = suggestion.active\r\n                ? 'suggestion-item--active'\r\n                : 'suggestion-item';\r\n              \r\n              const style = suggestion.active\r\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n              return (\r\n                <div\r\n                  {...getSuggestionItemProps(suggestion, {\r\n                    className,\r\n                    style,\r\n                  })}\r\n                >\r\n                  <span>{suggestion.description}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  );\r\n}\r\n\r\nexport default Input;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  general: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.spacing(5),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  temp: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  details: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingLeft: theme.spacing(5),\r\n      paddingBottom: theme.spacing(2),\r\n      marginTop: 'auto',\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n}));","const emoji = {\r\n  '01d': '☀️',\r\n  '02d': '⛅',\r\n  '03d': '☁',\r\n  '04d': '☁',\r\n  '09d': '🌧',\r\n  '10d': '🌦',\r\n  '11d': '⛈',\r\n  '13d': '❄',\r\n  '50d': '🌫',\r\n  '01n': '🌑',\r\n  '02n': '⛅',\r\n  '03n': '☁',\r\n  '04n': '☁',\r\n  '09n': '🌧',\r\n  '10n': '🌦',\r\n  '11n': '⛈',\r\n  '13n': '❄',\r\n  '50n': '🌫',\r\n}\r\n\r\nexport default emoji;","import React from 'react';\r\nimport { \r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport useStyles from './current_weather.styles';\r\nimport emoji from '../../utils/emoji';\r\n\r\nconst CurrentWeather = ({currentWeather}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    currentWeather !== undefined &&\r\n      <Grid container className={styles.container}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography align='center' variant='h3' component='h2'>{`${emoji[currentWeather.weather[0].icon]} ${currentWeather.weather[0].main}`}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={styles.general}>\r\n          <Typography align='right' variant='h1' component='h3' className={styles.temp}>{Math.round(currentWeather.temp)}&deg;</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={styles.details}>\r\n          <Typography variant='body1'>Feels like: {Math.round(currentWeather.feels_like)}&deg;</Typography>\r\n          <Typography variant='body1'>Humidity: {currentWeather.humidity}%</Typography>\r\n          <Typography variant='body1'>Pressure: {currentWeather.pressure}hPa</Typography>\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport emoji from '../../utils/emoji';\r\n\r\nconst DayForecast = ({dayWeather}) => {\r\n  const day = new Date(dayWeather.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' });\r\n  \r\n  return (\r\n    <div className='day'>\r\n      <Typography variant='body2' align='center'>{day}</Typography>\r\n      <Typography variant='h5' component='p' align='center'>{emoji[dayWeather.weather[0].icon]}</Typography>\r\n      <Typography variant='body2' align='center'>{Math.round(dayWeather.temp.day)}&deg; {Math.round(dayWeather.temp.night)}&deg;</Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayForecast;","import React from 'react';\r\n\r\nimport DayForecast from '../DayForecast/DayForecast';\r\nimport './week_forecast.css';\r\n\r\nconst WeekForecast = ({forecast}) => {\r\n\r\n  return (\r\n    <div className='container'>\r\n      {forecast !== undefined && forecast.map(day => <DayForecast key={day.dt} dayWeather={day} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeekForecast;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    minHeight: '396px',\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  city: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport Input from '../Input/Input';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport WeekForecast from '../WeekForecast/WeekForecast';\r\n\r\nimport { fetchLocation, fetchWeatherByLocation } from '../../api/api';\r\nimport useStyles from './app.styles';\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!sessionStorage.getItem('currentLocation')) {\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        let {latitude, longitude} = pos.coords;\r\n\r\n        fetchLocation(latitude, longitude)\r\n          .then(cityName => {\r\n            setLocation(cityName);\r\n            sessionStorage.setItem('currentLocation', cityName);\r\n            return cityName;\r\n          })\r\n          .then(cityName => {\r\n            if (!sessionStorage.getItem(cityName)) {\r\n              fetchWeatherByLocation(latitude, longitude)\r\n                .then(weather => {\r\n                  setWeather(weather.data);\r\n                  sessionStorage.setItem(cityName, JSON.stringify(weather.data));\r\n                })\r\n                .catch(() => alert(`Can't fetch weather data`))\r\n            } else {\r\n              setWeather(JSON.parse(sessionStorage.getItem(cityName)));\r\n            }\r\n          })\r\n          .catch(() => alert('Something went wrong'));\r\n      });\r\n    } else {\r\n      setLocation(sessionStorage.getItem('currentLocation'));\r\n      setWeather(JSON.parse(sessionStorage.getItem(sessionStorage.getItem('currentLocation'))));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <Container component='main' maxWidth='md'>\r\n        <Paper elevation={12} className={styles.paper}>\r\n          <Input setLocation={setLocation} setWeather={setWeather} />\r\n          <Typography align='center' variant='h5' className={styles.city}>{location !== '' ? location : 'Turn on geolocation or type the city'}</Typography>\r\n          <CurrentWeather currentWeather={weather.current} />\r\n          <WeekForecast forecast={weather.daily} />\r\n        </Paper> \r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}