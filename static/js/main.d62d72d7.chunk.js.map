{"version":3,"sources":["components/Input/input.styles.js","components/Input/Input.js","api/api.js","components/CurrentWeather/current_weather.styles.js","utils/emoji.js","components/CurrentWeather/CurrentWeather.js","components/DayForecast/DayForecast.js","components/WeekForecast/WeekForecast.js","components/App/app.styles.js","components/App/App.js","index.js"],"names":["makeStyles","theme","search","maxWidth","margin","Input","setLocation","setWeather","setCoordinates","useState","input","setInput","styles","useStyles","value","onChange","onSelect","location","upperCaseInput","toLowerCase","split","map","word","charAt","toUpperCase","substring","join","sessionStorage","getItem","JSON","parse","axios","get","process","then","res","city","data","results","address_components","long_name","geometry","latitude","lat","longitude","lng","catch","alert","getInputProps","suggestions","getSuggestionItemProps","loading","className","TextField","fullWidth","placeholder","suggestion","active","style","backgroundColor","cursor","description","general","breakpoints","up","paddingRight","spacing","marginBottom","temp","down","textAlign","details","paddingLeft","paddingBottom","marginTop","emoji","CurrentWeather","currentWeather","undefined","Grid","container","item","xs","sm","Typography","align","variant","component","weather","icon","main","Math","round","feels_like","humidity","pressure","DayForecast","dayWeather","day","Date","dt","toLocaleDateString","weekday","night","WeekForecast","forecast","paper","minHeight","padding","App","coordinates","useEffect","localStorage","locationName","navigator","geolocation","getCurrentPosition","pos","coords","fetchLocation","console","log","setItem","stringify","Object","keys","length","fetchWeatherByCoordinates","CssBaseline","Container","Paper","elevation","current","daily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAEeA,eAAW,SAACC,GAAD,MAAY,CACpCC,OAAQ,CACNC,SAAU,QACVC,OAAQ,c,OC0EGC,EAxED,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,YAAaC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eAAqB,EACnCC,mBAAS,IAD0B,mBACtDC,EADsD,KAC/CC,EAD+C,KAEvDC,EAASC,IA4Bf,OACE,cAAC,IAAD,CACEC,MAAOJ,EACPK,SA7BiB,SAACL,GACpBC,EAASD,IA6BPM,SA1BiB,SAACN,GACpB,ICXsBO,EDWlBC,EAAiBR,EAClBS,cACAC,MAAM,KACNC,KAAI,SAACC,GAAD,OAAUA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,UAAU,MAC5DC,KAAK,KAEHC,eAAeC,QAAQV,IAQ1BZ,EAAYY,GACZX,EAAWsB,KAAKC,MAAMH,eAAeC,QAAQV,OC1BzBD,EDkBHP,EClBgBqB,IAAMC,IAAN,oEAAuEf,EAAvE,4BAAmGgB,4CACvIC,MAAK,SAAAC,GAAG,MAAK,CAACC,KAAMD,EAAIE,KAAKC,QAAQ,GAAGC,mBAAmB,GAAGC,UAAWvB,SAAS,eAAKkB,EAAIE,KAAKC,QAAQ,GAAGG,SAASxB,eDkB9GiB,MAAK,YAAyB,IAAtBE,EAAqB,EAArBA,KAAMnB,EAAe,EAAfA,SACbX,EAAY8B,GACZ5B,EAAe,CAAEkC,SAAUzB,EAAS0B,IAAKC,UAAW3B,EAAS4B,SAE9DC,OAAM,kBAAMC,MAAM,oBAMvBpC,EAAS,KAIT,SAKG,gBAAGqC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,uBAAwBC,EAAvD,EAAuDA,QAAvD,OACC,sBAAKC,UAAWxC,EAAOV,OAAvB,UACE,cAACmD,EAAA,EAAD,aAAWC,WAAS,GACdN,EAAc,CAChBO,YAAa,SACbH,UAAW,4BAGf,sBAAKA,UAAU,kCAAf,UACGD,GAAW,6CACXF,EAAY5B,KAAI,SAAAmC,GACf,IAAMJ,EAAYI,EAAWC,OACzB,0BACA,kBAEEC,EAAQF,EAAWC,OACrB,CAAEE,gBAAiB,UAAWC,OAAQ,WACtC,CAAED,gBAAiB,UAAWC,OAAQ,WAC1C,OACE,+CACMV,EAAuBM,EAAY,CACrCJ,YACAM,WAHJ,aAME,+BAAOF,EAAWK,8B,iBElErB7D,eAAW,SAACC,GAAD,YAAY,CACpC6D,QAAQ,eACL7D,EAAM8D,YAAYC,GAAG,MAAQ,CAC5BC,aAAchE,EAAMiE,QAAQ,GAC5BC,aAAclE,EAAMiE,QAAQ,KAGhCE,KAAK,eACFnE,EAAM8D,YAAYM,KAAK,MAAQ,CAC9BC,UAAW,WAGfC,SAAO,mBACJtE,EAAM8D,YAAYM,KAAK,MAAQ,CAC9BC,UAAW,SACXH,aAAclE,EAAMiE,QAAQ,KAHzB,cAKJjE,EAAM8D,YAAYC,GAAG,MAAQ,CAC5BQ,YAAavE,EAAMiE,QAAQ,GAC3BO,cAAexE,EAAMiE,QAAQ,GAC7BQ,UAAW,OACXP,aAAclE,EAAMiE,QAAQ,KATzB,OCOMS,EArBD,CACZ,MAAO,eACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,eACP,MAAO,eACP,MAAO,SACP,MAAO,SACP,MAAO,eACP,MAAO,eACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,eACP,MAAO,eACP,MAAO,SACP,MAAO,SACP,MAAO,gBCYMC,EArBQ,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,eACjBjE,EAASC,IAEf,YACqBiE,IAAnBD,GACE,eAACE,EAAA,EAAD,CAAMC,WAAS,EAAC5B,UAAWxC,EAAOoE,UAAlC,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACE,cAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,UAAU,KAAlD,mBAA2DZ,EAAME,EAAeW,QAAQ,GAAGC,MAA3F,YAAoGZ,EAAeW,QAAQ,GAAGE,UAEhI,cAACX,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG/B,UAAWxC,EAAOkD,QAA5C,SACE,eAACsB,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,KAAKC,UAAU,KAAKnC,UAAWxC,EAAOwD,KAAxE,UAA+EuB,KAAKC,MAAMf,EAAeT,MAAzG,YAEF,eAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAG/B,UAAWxC,EAAO2D,QAA5C,UACE,eAACa,EAAA,EAAD,CAAYE,QAAQ,QAApB,yBAAyCK,KAAKC,MAAMf,EAAegB,YAAnE,UACA,eAACT,EAAA,EAAD,CAAYE,QAAQ,QAApB,uBAAuCT,EAAeiB,SAAtD,OACA,eAACV,EAAA,EAAD,CAAYE,QAAQ,QAApB,uBAAuCT,EAAekB,SAAtD,gBCPKC,EAZK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACdC,EAAM,IAAIC,KAAqB,IAAhBF,EAAWG,IAAWC,mBAAmB,QAAS,CAAEC,QAAS,UAElF,OACE,sBAAKlD,UAAU,MAAf,UACE,cAACgC,EAAA,EAAD,CAAYE,QAAQ,QAAQD,MAAM,SAAlC,SAA4Ca,IAC5C,cAACd,EAAA,EAAD,CAAYE,QAAQ,KAAKC,UAAU,IAAIF,MAAM,SAA7C,SAAuDV,EAAMsB,EAAWT,QAAQ,GAAGC,QACnF,eAACL,EAAA,EAAD,CAAYE,QAAQ,QAAQD,MAAM,SAAlC,UAA4CM,KAAKC,MAAMK,EAAW7B,KAAK8B,KAAvE,QAAmFP,KAAKC,MAAMK,EAAW7B,KAAKmC,OAA9G,cCESC,G,MATM,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAErB,OACE,qBAAKrD,UAAU,YAAf,cACgB0B,IAAb2B,GAA0BA,EAASpF,KAAI,SAAA6E,GAAG,OAAI,cAAC,EAAD,CAA0BD,WAAYC,GAApBA,EAAIE,WCP5DpG,eAAW,SAACC,GAAD,MAAY,CACpCyG,MAAO,CACLC,UAAW,QACXjC,UAAWzE,EAAMiE,QAAQ,GACzB0C,QAAS3G,EAAMiE,QAAQ,IAEzB9B,KAAM,CACJhC,OAAQH,EAAMiE,QAAQ,QCsEX2C,MAhEf,WAAgB,IAAD,EACmBpG,mBAAS,IAD5B,mBACNQ,EADM,KACIX,EADJ,OAEyBG,mBAAS,IAFlC,mBAENqG,EAFM,KAEOtG,EAFP,OAGiBC,mBAAS,IAH1B,mBAGN+E,EAHM,KAGGjF,EAHH,KAIPK,EAASC,IA8Cf,OA5CAkG,qBAAU,WACR,GAAKC,aAAapF,QAAQ,gBAWnB,CAAC,IAAD,EACuCC,KAAKC,MAAMkF,aAAapF,QAAQ,iBAAtEqF,EADD,EACCA,aAAcvE,EADf,EACeA,SAAUE,EADzB,EACyBA,UAC9BtC,EAAY2G,GACZzG,EAAe,CAAEkC,WAAUE,mBAb3BsE,UAAUC,YAAYC,oBAAmB,SAACC,GAAS,IAAD,EAClBA,EAAIC,OAA5B5E,EAD0C,EAC1CA,SAAUE,EADgC,EAChCA,WPtBF,SAACF,EAAUE,GAAX,OAAyBb,IAAMC,IAAN,mEAAsEU,EAAtE,YAAkFE,EAAlF,iDAAoIX,4CAChLC,MAAK,SAAAC,GAAG,OAAIA,EAAIE,KAAKC,QAAQ,GAAGC,mBAAmB,GAAGC,cOuBjD+E,CAAc7E,EAAUE,GACrBV,MAAK,SAAA+E,GACJ3G,EAAY2G,GACZzG,EAAe,CAAEkC,WAAUE,iBAE5BE,OAAO,kBAAM0E,QAAQC,IAAR,8BAOnB,IAEHV,qBAAU,WACK,KAAb9F,GAAmB+F,aAAaU,QAAQ,eAAgB7F,KAAK8F,UAAU,CACrEV,aAAchG,EACdyB,SAAUoE,EAAYpE,SACtBE,UAAWkE,EAAYlE,eAExB,CAAC3B,EAAU6F,IAEdC,qBAAU,WACR,GAAwC,IAApCa,OAAOC,KAAKf,GAAagB,OAC3B,GAAKnG,eAAeC,QAAQX,GAU1BV,EAAWsB,KAAKC,MAAMH,eAAeC,QAAQX,SAVR,CAAC,IAAD,EACPY,KAAKC,MAAMkF,aAAapF,QAAQ,kBP3CpC,SAACc,EAAUE,GAAX,OAAyBb,IAAMC,IAAN,8DAAiEU,EAAjE,gBAAiFE,EAAjF,8DAAgJX,sCO6CnM8F,CAHqC,EAC/BrF,SAD+B,EACrBE,WAGbV,MAAK,SAAAsD,GACJjF,EAAWiF,EAAQnD,MACnBV,eAAe+F,QAAQzG,EAAUY,KAAK8F,UAAUnC,EAAQnD,UAEzDS,OAAM,kBAAMC,MAAM,kCAKxB,CAAC+D,IAGF,cAACkB,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAW1C,UAAU,OAAOpF,SAAS,KAArC,SACE,eAAC+H,EAAA,EAAD,CAAOC,UAAW,GAAI/E,UAAWxC,EAAO8F,MAAxC,UACE,cAAC,EAAD,CAAOpG,YAAaA,EAAaC,WAAYA,EAAYC,eAAgBA,IACzE,cAAC4E,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKlC,UAAWxC,EAAOwB,KAA1D,SAA8E,KAAbnB,EAAkBA,EAAW,yCAC9F,cAAC,EAAD,CAAgB4D,eAAgBW,EAAQ4C,UACxC,cAAC,EAAD,CAAc3B,SAAUjB,EAAQ6C,gBCpE1CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d62d72d7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  search: {\r\n    maxWidth: '360px',\r\n    margin: '0 auto',\r\n  },\r\n}));","import React, { useState } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nimport { fetchCoordinates, fetchWeatherByLocation } from '../../api/api';\r\nimport useStyles from './input.styles';\r\n\r\nconst Input = ({ setLocation, setWeather, setCoordinates }) => {\r\n  const [input, setInput] = useState('');\r\n  const styles = useStyles();\r\n\r\n  const handleChange = (input) => {\r\n    setInput(input);\r\n  }\r\n\r\n  const handleSelect = (input) => {\r\n    let upperCaseInput = input\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map((word) => word.charAt(0).toUpperCase() + word.substring(1))\r\n      .join(' ');\r\n\r\n    if (!sessionStorage.getItem(upperCaseInput)) {\r\n      fetchCoordinates(input)\r\n        .then(({ city, location }) => {\r\n          setLocation(city);\r\n          setCoordinates({ latitude: location.lat, longitude: location.lng });\r\n        })\r\n        .catch(() => alert('Invalid input'));\r\n    } else {\r\n      setLocation(upperCaseInput);\r\n      setWeather(JSON.parse(sessionStorage.getItem(upperCaseInput)));\r\n    }\r\n\r\n    setInput('');\r\n  }\r\n\r\n  return (\r\n    <PlacesAutocomplete\r\n      value={input}\r\n      onChange={handleChange}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div className={styles.search}>\r\n          <TextField fullWidth\r\n            {...getInputProps({\r\n              placeholder: 'Search',\r\n              className: 'location-search-input',\r\n            })}\r\n          />\r\n          <div className=\"autocomplete-dropdown-container\">\r\n            {loading && <div>Loading...</div>}\r\n            {suggestions.map(suggestion => {\r\n              const className = suggestion.active\r\n                ? 'suggestion-item--active'\r\n                : 'suggestion-item';\r\n              \r\n              const style = suggestion.active\r\n                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\r\n                : { backgroundColor: '#ffffff', cursor: 'pointer' };\r\n              return (\r\n                <div\r\n                  {...getSuggestionItemProps(suggestion, {\r\n                    className,\r\n                    style,\r\n                  })}\r\n                >\r\n                  <span>{suggestion.description}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  );\r\n}\r\n\r\nexport default Input;","import axios from 'axios';\r\n\r\nconst fetchLocation = (latitude, longitude) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&language=en&result_type=locality&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => res.data.results[0].address_components[0].long_name);\r\n  \r\nconst fetchCoordinates = (location) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&language=en&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => ({city: res.data.results[0].address_components[0].long_name, location: {...res.data.results[0].geometry.location}}));\r\n\r\nconst fetchWeatherByCoordinates = (latitude, longitude) => axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=minutely,hourly,alerts&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n\r\nexport { fetchLocation, fetchCoordinates, fetchWeatherByCoordinates };","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  general: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingRight: theme.spacing(5),\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  temp: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n    },\r\n  },\r\n  details: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingLeft: theme.spacing(5),\r\n      paddingBottom: theme.spacing(2),\r\n      marginTop: 'auto',\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n}));","const emoji = {\r\n  '01d': '☀️',\r\n  '02d': '⛅',\r\n  '03d': '☁',\r\n  '04d': '☁',\r\n  '09d': '🌧',\r\n  '10d': '🌦',\r\n  '11d': '⛈',\r\n  '13d': '❄',\r\n  '50d': '🌫',\r\n  '01n': '🌑',\r\n  '02n': '⛅',\r\n  '03n': '☁',\r\n  '04n': '☁',\r\n  '09n': '🌧',\r\n  '10n': '🌦',\r\n  '11n': '⛈',\r\n  '13n': '❄',\r\n  '50n': '🌫',\r\n}\r\n\r\nexport default emoji;","import React from 'react';\r\nimport { \r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport useStyles from './current_weather.styles';\r\nimport emoji from '../../utils/emoji';\r\n\r\nconst CurrentWeather = ({currentWeather}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    currentWeather !== undefined &&\r\n      <Grid container className={styles.container}>\r\n        <Grid item xs={12} sm={12}>\r\n          <Typography align='center' variant='h3' component='h2'>{`${emoji[currentWeather.weather[0].icon]} ${currentWeather.weather[0].main}`}</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={styles.general}>\r\n          <Typography align='right' variant='h1' component='h3' className={styles.temp}>{Math.round(currentWeather.temp)}&deg;</Typography>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={styles.details}>\r\n          <Typography variant='body1'>Feels like: {Math.round(currentWeather.feels_like)}&deg;</Typography>\r\n          <Typography variant='body1'>Humidity: {currentWeather.humidity}%</Typography>\r\n          <Typography variant='body1'>Pressure: {currentWeather.pressure}hPa</Typography>\r\n        </Grid>\r\n      </Grid>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nimport emoji from '../../utils/emoji';\r\n\r\nconst DayForecast = ({dayWeather}) => {\r\n  const day = new Date(dayWeather.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' });\r\n  \r\n  return (\r\n    <div className='day'>\r\n      <Typography variant='body2' align='center'>{day}</Typography>\r\n      <Typography variant='h5' component='p' align='center'>{emoji[dayWeather.weather[0].icon]}</Typography>\r\n      <Typography variant='body2' align='center'>{Math.round(dayWeather.temp.day)}&deg; {Math.round(dayWeather.temp.night)}&deg;</Typography>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayForecast;","import React from 'react';\r\n\r\nimport DayForecast from '../DayForecast/DayForecast';\r\nimport './week_forecast.css';\r\n\r\nconst WeekForecast = ({forecast}) => {\r\n\r\n  return (\r\n    <div className='container'>\r\n      {forecast !== undefined && forecast.map(day => <DayForecast key={day.dt} dayWeather={day} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeekForecast;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    minHeight: '396px',\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  city: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  CssBaseline,\r\n  Container,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport Input from '../Input/Input';\r\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\r\nimport WeekForecast from '../WeekForecast/WeekForecast';\r\n\r\nimport { fetchLocation, fetchWeatherByCoordinates } from '../../api/api';\r\nimport useStyles from './app.styles';\r\n\r\nfunction App() {\r\n  const [location, setLocation] = useState('');\r\n  const [coordinates, setCoordinates] = useState({});\r\n  const [weather, setWeather] = useState({});\r\n  const styles = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem('lastLocation')) {\r\n      navigator.geolocation.getCurrentPosition((pos) => {\r\n        let { latitude, longitude } = pos.coords;\r\n  \r\n        fetchLocation(latitude, longitude)\r\n          .then(locationName => {\r\n            setLocation(locationName);\r\n            setCoordinates({ latitude, longitude });\r\n          })\r\n          .catch (() => console.log(`Can't get location`))\r\n      });\r\n    } else {\r\n      let { locationName, latitude, longitude } = JSON.parse(localStorage.getItem('lastLocation'));\r\n      setLocation(locationName);\r\n      setCoordinates({ latitude, longitude });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    location !== '' && localStorage.setItem('lastLocation', JSON.stringify({\r\n      locationName: location,\r\n      latitude: coordinates.latitude,\r\n      longitude: coordinates.longitude\r\n    }));\r\n  }, [location, coordinates]);\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(coordinates).length !== 0) {\r\n      if (!sessionStorage.getItem(location)) {\r\n        let { latitude, longitude } = JSON.parse(localStorage.getItem('lastLocation'));\r\n\r\n        fetchWeatherByCoordinates(latitude, longitude)\r\n          .then(weather => {\r\n            setWeather(weather.data);\r\n            sessionStorage.setItem(location, JSON.stringify(weather.data));\r\n          })\r\n          .catch(() => alert(`Can't fetch weather data`))\r\n      } else {\r\n        setWeather(JSON.parse(sessionStorage.getItem(location)));\r\n      }\r\n    }\r\n  }, [coordinates]);\r\n\r\n  return (\r\n    <CssBaseline>\r\n      <Container component='main' maxWidth='md'>\r\n        <Paper elevation={12} className={styles.paper}>\r\n          <Input setLocation={setLocation} setWeather={setWeather} setCoordinates={setCoordinates} />\r\n          <Typography align='center' variant='h5' className={styles.city}>{location !== '' ? location : 'Turn on geolocation or type the city'}</Typography>\r\n          <CurrentWeather currentWeather={weather.current} />\r\n          <WeekForecast forecast={weather.daily} />\r\n        </Paper> \r\n      </Container>\r\n    </CssBaseline>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}