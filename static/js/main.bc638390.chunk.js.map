{"version":3,"sources":["api/api.js","components/Input/input.styles.js","components/Input/Input.js","components/CurrentWeather/current_weather.styles.js","components/CurrentWeather/CurrentWeather.js","components/DayForecast/DayForecast.js","components/WeekForecast/WeekForecast.js","components/App/app.styles.js","components/App/App.js","index.js"],"names":["fetchWeatherByLocation","latitude","longitude","axios","get","process","makeStyles","theme","search","maxWidth","margin","Input","setLocation","setWeather","useState","input","setInput","styles","useStyles","onSubmit","e","preventDefault","location","city","toLowerCase","split","map","word","charAt","toUpperCase","substring","join","sessionStorage","getItem","JSON","parse","then","res","data","results","geometry","coordinates","lat","lng","weather","setItem","stringify","catch","err","alert","className","TextField","label","value","onChange","target","temp","breakpoints","down","textAlign","up","marginRight","spacing","marginBottom","details","CurrentWeather","currentWeather","undefined","Typography","align","variant","main","Grid","container","item","xs","sm","Math","round","feels_like","humidity","pressure","DayForecast","dayWeather","day","Date","dt","toLocaleDateString","weekday","night","WeekForecast","forecast","paper","marginTop","padding","App","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","address_components","long_name","fetchLocation","console","log","CssBaseline","Container","component","Paper","elevation","current","daily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc638390.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchLocation = (latitude, longitude) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&language=en&result_type=locality&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => res.data.results[0].address_components[0].long_name);\r\n  \r\nconst fetchCoordinates = (location) => axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${location}&key=${process.env.REACT_APP_GEOCODE_API_KEY}`)\r\n  .then(res => res.data.results[0].geometry.location)\r\n\r\nconst fetchWeatherByLocation = (latitude, longitude) => axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=minutely,hourly,alerts&units=metric&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\r\n\r\nexport { fetchLocation, fetchCoordinates, fetchWeatherByLocation };","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  search: {\r\n    maxWidth: '200px',\r\n    margin: '0 auto',\r\n  },\r\n}));","import React, { useState } from 'react';\r\nimport {\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nimport { fetchCoordinates, fetchWeatherByLocation } from '../../api/api';\r\nimport useStyles from './input.styles';\r\n\r\nconst Input = ({ setLocation, setWeather }) => {\r\n  const [input, setInput] = useState('');\r\n  const styles = useStyles();\r\n\r\n  const handleChange = (e) => {\r\n    setInput(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let city = input.toLowerCase()\r\n      .split(' ')\r\n      .map((word) => word.charAt(0).toUpperCase() + word.substring(1))\r\n      .join(' ');\r\n\r\n    if (!sessionStorage.getItem(city)) {\r\n      fetchCoordinates(city)\r\n        .then((coordinates => fetchWeatherByLocation(coordinates.lat, coordinates.lng)))\r\n        .then(weather => {\r\n          setWeather(weather.data);\r\n          sessionStorage.setItem(city, JSON.stringify(weather.data));\r\n        })\r\n        .then(() => setLocation(city))\r\n        .catch(err => alert('Invalid input'));\r\n    } else {\r\n      setLocation(city);\r\n      setWeather(JSON.parse(sessionStorage.getItem(city)));\r\n    }\r\n\r\n    setInput('');\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.search}>\r\n      <TextField\r\n        label='Search'\r\n        value={input}\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Input;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  temp: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      textAlign: 'center',\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginRight: theme.spacing(8),\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      marginBottom: theme.spacing(3),\r\n    },\r\n  },\r\n  details: {\r\n    [theme.breakpoints.down('xs')]: {\r\n        textAlign: 'center',\r\n        marginBottom: theme.spacing(1),\r\n    },\r\n  },\r\n}));","import React from 'react';\r\nimport { \r\n  Grid,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport useStyles from './current_weather.styles';\r\n\r\nconst CurrentWeather = ({currentWeather}) => {\r\n  const styles = useStyles();\r\n\r\n  return (\r\n    currentWeather === undefined ?\r\n      <Typography align='center' variant='h5'>Loading...</Typography>\r\n    :\r\n      <>\r\n        <Typography align='center' variant='h3'>{currentWeather.weather[0].main}</Typography>\r\n        <Grid container>\r\n          <Grid item xs={12} sm={6}>\r\n            <Typography align='right' variant='h1' className={styles.temp}>{Math.round(currentWeather.temp)}&deg;</Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} className={styles.details}>\r\n            <Typography variant='h6'>Feels like: {Math.round(currentWeather.feels_like)}&deg;</Typography>\r\n            <Typography variant='h6'>Humidity: {currentWeather.humidity}%</Typography>\r\n            <Typography variant='h6'>Pressure: {currentWeather.pressure}hPa</Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather;","import React from 'react';\r\n\r\nimport './day_forecast.css';\r\n\r\nconst DayForecast = ({dayWeather}) => {\r\n  const day = new Date(dayWeather.dt * 1000).toLocaleDateString('en-US', { weekday: 'short' });\r\n  \r\n  return (\r\n    <div className='day'>\r\n      <div>{day}</div>\r\n      <div>{Math.round(dayWeather.temp.day)}&deg;</div>\r\n      <div>{Math.round(dayWeather.temp.night)}&deg;</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DayForecast;","import React from 'react';\r\n\r\nimport DayForecast from '../DayForecast/DayForecast';\r\nimport './week_forecast.css';\r\n\r\nconst WeekForecast = ({forecast}) => {\r\n\r\n  return (\r\n    <div className='container'>\r\n      {forecast !== undefined && forecast.map(day => <DayForecast key={day.dt} dayWeather={day} />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WeekForecast;","import { makeStyles } from '@material-ui/core';\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n  },\r\n  city: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));","import React, { useState, useEffect } from 'react';\nimport {\n  CssBaseline,\n  Container,\n  Paper,\n  Typography\n} from '@material-ui/core';\n\nimport Input from '../Input/Input';\nimport CurrentWeather from '../CurrentWeather/CurrentWeather';\nimport WeekForecast from '../WeekForecast/WeekForecast';\n\nimport { fetchLocation, fetchWeatherByLocation } from '../../api/api';\nimport useStyles from './app.styles';\n\nfunction App() {\n  const [location, setLocation] = useState('');\n  const [weather, setWeather] = useState({});\n  const styles = useStyles();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      let {latitude, longitude} = pos.coords;\n\n      if (!sessionStorage.getItem('currentLocation')) {\n        fetchLocation(latitude, longitude)\n          .then(res => {\n            setLocation(res);\n            sessionStorage.setItem('currentLocation', res);\n          })\n          .catch(err => console.log(err))\n      } else {\n        setLocation(sessionStorage.getItem('currentLocation'));\n      }\n\n      if (!sessionStorage.getItem('currentLocationWeather')) {\n        fetchWeatherByLocation(latitude, longitude)\n          .then(weather => {\n            setWeather(weather.data);\n            sessionStorage.setItem('currentLocationWeather', JSON.stringify(weather.data));\n          })\n          .catch(err => console.log(err))\n      } else {\n        setWeather(JSON.parse(sessionStorage.getItem('currentLocationWeather')));\n      }\n    }, () => alert('Pleace, turn on geolocation'));\n    ;\n  }, []);\n\n  return (\n    <CssBaseline>\n      <Container component='main' maxWidth='md'>\n        <Paper elevation={12} className={styles.paper}>\n          <Input setLocation={setLocation} setWeather={setWeather} />\n          {location !== '' && \n            <Typography align='center' variant='h4' className={styles.city}>{location}</Typography>\n          }\n          <CurrentWeather currentWeather={weather.current} />\n          <WeekForecast forecast={weather.daily} />\n        </Paper> \n      </Container>\n    </CssBaseline>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}